<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA8AAAAPCAYAAAA71pVKAAAABGdBTUEAALGPC/xhBQAAAJNJREFUOE/N
        kkEKAjEMAOvz9KCe9KYPUfEF+wI/KqjojGwg0LoUBHFgCEmbtuym/AUzPOHqndWs8YDuq7DxiTfcWkiY
        W3fdAyq8MTYYNyi50bjEJgu8ohsfeBmjufU5TpIPCLsagwFzs3kXe4ynhuY7nCQ3+tTzGM3v+PGA3q/d
        nIOv/rOTc0QnqYV115sT9ktKeQHbcjpVS0DmegAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnConfirmar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAYAAAAfSC3RAAAABGdBTUEAALGPC/xhBQAAAKVJREFUOE+9
        0DsKwkAURuGBKLETbEwpWIil2tm7gmQlrkDIPuxcia3WtmLpC7SwCIKen0ksouIVxAMfTC65TIj7R3XU
        /NGeljZYoa2BtSluuKKvgaUEWpJUA0tN7KClBSp4KkLLHx/NoKUMAw3KaWmNI3oaUIziEycavKqLM/TS
        HiNs8+clqnib/tYBxS1yQQcfKy+PYW6IE+YINPimBkJ//GnO3QFeWCM99kImCwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="txt.IconF7" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAYAAAAfSC3RAAAABGdBTUEAALGPC/xhBQAAAJNJREFUOE9j
        GPSAFYh5IEziAUjTViBeDuYRCdiBeBcQfwRiRZAAMQCkaT8Q/wViR5AAMjAD4kgIEwVwAvFeIP4PxHkg
        AXSQDMQgyflAzAESAAKQpgNADBKfBxLABUqAGKToBhAbAPFRKP8UEIMCBi9oAmKQYhh+BMSiQEwU6AZi
        kKZvQKwFEiAFzAJiPwhzcAAGBgAssxmRMWW7NQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="txt.IconF8" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAYAAAAfSC3RAAAABGdBTUEAALGPC/xhBQAAAF9JREFUOE9j
        GLqgAYgTIEwUABIDyeEEIAX/gbgfzIOACUAMEsNmIAqAKdwPxSA2SIwocACIQRpAGMQmGiBrBNlKFIA5
        FaQZZgBBp8ICB1khzCC8gQOSxKYAl/jgBwwMAG1fGzHxdZNkAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMIOAADCDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnX0iAqF6HBSidhdVoHcYFaiKSQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJyEKgahdg9doXMH06FyAf6hcwfKoncST6B7HAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJd1LAOYchMqnXIKnKByAvChcgD/oXIA/6FyAP+hcwLuoHQKoKB5FS2ffCMEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACRcCkIjmcQY5NoBtmXagD/nG0A/59wAP+hcgD/oXIA/6FyAP+hcgD/oXMF4p92
        DXKgfCISAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACGaTEDgl0WNoVdC6yIXQL2jGAA/5BjAP+VZwD/mGoA/51tAf+fcAD/oXIA/6Fy
        AP+hcgD/oXIB+KFzBsmieBNJoXofDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAd14iC3hTD2h6UgXgflQB/4JXAf+GWwD/iV4A/41hAP+RZQD/lmgA/5lr
        AP+dbgD/n3EA/6FyAP+hcgD/oXIA/6FzA+6gdAueo34iHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAblImBmhIEjlsRwnDbkcC+3NKAP93TQH/e1AB/35UAP+DVwD/h1sA/4pe
        AP+OYgH/kmUA/5doAP+abAD/nm8A/6BxAP+hcgD/oXIA/6FyAf6hcgTloXUOdqJ8HhgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGVKJA1gPw17YD0E4mQ+AP9nQQD/a0UA/3BIAP90SwH/eE8A/3xS
        AP+AVQH/hFgB/4hcAP+LXwD/j2MA/5NmAP+YaQD/m20A/59vAP+hcQD/oXIA/6FyAP+hcgL4n3ULrp19
        IBoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxoz8PiHAkrFw5Bf1ZNAD/XTgA/2A7AP9kPgH/aUEA/21F
        AP9xSAD/dEwA/3hPAP98UgD/gFYA/4RZAP+IXQD/i2AA/5BjAP+UZwD/l2oA/5ttAP+fcAD/oHIC8qF0
        CKijehoyr5FBAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOnkUhTg2UrCtqY0/3JTEP9aNQL/WjUA/144
        AP9iPAD/ZUAA/2pDAP9uRgH/ckkA/3VNAP96UAH/flMA/4JXAf+GWgH/iV4A/4xhAP+RZAD/lWgC95ls
        BsqgdRFOoH0bEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6uZSFOznT8Lt6E3/4dlI/5yH
        J/9jQgr/VzIB/1s2AP9fOgD/Yj0A/2VAAP9rQwD/bkYA/3NKAP92TQD/elAA/35UAP+BVwD/hlsB/opg
        BteQZw9llHIjEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADq5lIU7OdPwu3o
        Tf/t6E3/6eNL/9DFQP+EaRv/XTsG/1gzAP9cNwD/XzoA/2M9AP9mQAD/a0QB/29HAP90SwH/d04B/X1T
        BeGBWg1+iWUVIZN0MgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOrm
        UhTs50/C7ehN/+3oTf/t6E3/7ehN/+bgSv+3pjT/bk4Q/1YyAf9ZNAH/XDgB/2A7AP9kPgD/aEEB/21G
        A/RyTQqdelgUMX5iJwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA6uZSFOznT8Lt6E3/7ehN/+3oTf/t6E3/7ehN/+znTf/f10f/oIso/2VFC/9WMgH/WTQA/105
        A/FkQQm0bk0XOXZWHQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADq5lIU7OdPwu3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/q5Uz/y78+/39k
        Gf5ZNwnaXj8RVmZJHRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOrmUhTs50/C7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3o
        Tf/t6E3/7OdN+urlUKrq5lIp5eFkAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6uZSFOznT8Lt6E3/7ehN/+3oTf/t6E3/7ehN/+3o
        Tf/t6E3/7ehN/+3oTf/t6E3/7ehN/+znTtTq5lNw6uVYDerjXQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADq5lIU7OdPwu3oTf/t6E3/7ehN/+3o
        Tf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf3s51DD7OZST+XgYgUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOrmUhTs50/C7ehN/+3o
        Tf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E7r6+ZQm+rl
        VCfk4l0EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6uZSFOzn
        T8Lt6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3o
        Tf/t6E3/7OdP2+zmUnTo4lwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADq5lIU7OdPwu3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3o
        Tf/t6E3/7ehN/+3oTf/t6E3/7ehN+eznUMHs5lJO5uRcCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOrmUg/s51Cr7ehN/u3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3o
        Tf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3nTvHr51CT5+RYIQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXkXQ/q5lJ/7ehO5O3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3o
        Tf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf7s507i6+VXRN/g
        agEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOflWAbr5lQ87OdQyO3oTfzt6E3/7ehN/+3o
        Tf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3+7ehO7ern
        UYnp5VYe3eBnAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADl41kN6+dRbuzo
        TuTt6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehO9evn
        T6/o51Qs391uAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADl51sD6uZTPevnT7Tu6E337ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN++zn
        T9nr5VNa6OVXEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6ORZCuvmUW3s6E7h7ehN/+3oTf/t6E3/7ehN/+3oTf/t6E3/7ehN/+3o
        Tuzr51CF6eVWHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5uFeBOrmUzHs51Cq7ehO8+3oTf/t6E3/7ehN/+3o
        TfPs51Cz6uZUO+bnVQcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOviXArt5lJo7edP3e7o
        Tf/s507a7eVRYu3jWA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOrk
        WAPo5FUb6eZTa+jmVB7n32ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////8H///+A///+AD///AAf//AAB//gAAP/gAAA/wAAAH4AAAB+AA
        AB/gAAB/4AAA/+AAA//gAA//4AA//+AAP//gAA//4AAH/+AAAf/gAAD/4AAAP+AAAB/wAAAH+AAAB/4A
        AB//AAB//8AB///gA///+A////wf//////8=
</value>
  </data>
</root>